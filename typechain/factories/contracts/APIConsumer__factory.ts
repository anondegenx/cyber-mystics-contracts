/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BytesLike,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  APIConsumer,
  APIConsumerInterface,
} from "../../contracts/APIConsumer";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_oracle",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "_jobId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_fee",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_link",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
    ],
    name: "ChainlinkCancelled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
    ],
    name: "ChainlinkFulfilled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
    ],
    name: "ChainlinkRequested",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "volume",
        type: "uint256",
      },
    ],
    name: "DataFullfilled",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_requestId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_volume",
        type: "uint256",
      },
    ],
    name: "fulfill",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "requestVolumeData",
    outputs: [
      {
        internalType: "bytes32",
        name: "requestId",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "volume",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawLink",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60e060405260016004553480156200001657600080fd5b5060405162001b1738038062001b1783398181016040528101906200003c9190620002b4565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415620000885762000082620000e860201b60201c565b6200009a565b62000099816200019060201b60201c565b5b8373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250508260a081815250508160c081815250505050505062000358565b6200018e73c89bd4e1632d3a43cb03aaad5262cbe4038bc57173ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b815260040160206040518083038186803b1580156200014757600080fd5b505afa1580156200015c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000182919062000326565b6200019060201b60201c565b565b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200020682620001d9565b9050919050565b6200021881620001f9565b81146200022457600080fd5b50565b60008151905062000238816200020d565b92915050565b6000819050919050565b62000253816200023e565b81146200025f57600080fd5b50565b600081519050620002738162000248565b92915050565b6000819050919050565b6200028e8162000279565b81146200029a57600080fd5b50565b600081519050620002ae8162000283565b92915050565b60008060008060808587031215620002d157620002d0620001d4565b5b6000620002e18782880162000227565b9450506020620002f48782880162000262565b935050604062000307878288016200029d565b92505060606200031a8782880162000227565b91505092959194509250565b6000602082840312156200033f576200033e620001d4565b5b60006200034f8482850162000227565b91505092915050565b60805160a05160c05161178f6200038860003960006103930152600061020501526000610371015261178f6000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80634357855e146100515780636021abac1461006d5780638dc654a21461008b578063c618a1e414610095575b600080fd5b61006b60048036038101906100669190610e96565b6100b3565b005b6100756101fd565b6040516100829190610ee5565b60405180910390f35b6100936103be565b005b61009d6103c0565b6040516100aa9190610f0f565b60405180910390f35b816005600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610155576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161014c90610fad565b60405180910390fd5b6005600082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055807f7cc135e0cebb02c3480ae5d74d377283180a2601f8f644edf7987b009316c63a60405160405180910390a2816006819055507f221d507243adddffe789060be0e69bff4be830996c6b265bfda5083d86f886326006546040516101f09190610f0f565b60405180910390a1505050565b6000806102327f000000000000000000000000000000000000000000000000000000000000000030634357855e60e01b6103c6565b90506102966040518060400160405280600381526020017f676574000000000000000000000000000000000000000000000000000000000081525060405180608001604052806049815260200161171160499139836103f79092919063ffffffff16565b6103156040518060400160405280600481526020017f70617468000000000000000000000000000000000000000000000000000000008152506040518060400160405280601881526020017f5241572c4554482c5553442c564f4c554d453234484f55520000000000000000815250836103f79092919063ffffffff16565b6000670de0b6b3a7640000905061036c6040518060400160405280600581526020017f74696d6573000000000000000000000000000000000000000000000000000000815250828461042a9092919063ffffffff16565b6103b77f0000000000000000000000000000000000000000000000000000000000000000837f000000000000000000000000000000000000000000000000000000000000000061045d565b9250505090565b565b60065481565b6103ce610d9e565b6103d6610d9e565b6103ed85858584610529909392919063ffffffff16565b9150509392505050565b61040e8284608001516105d990919063ffffffff16565b6104258184608001516105d990919063ffffffff16565b505050565b6104418284608001516105d990919063ffffffff16565b6104588184608001516105fe90919063ffffffff16565b505050565b60008060045490506001816104729190610ffc565b6004819055506000634042994660e01b60008087600001513089604001518760018c60800151600001516040516024016104b3989796959493929190611167565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050905061051e868386846106ab565b925050509392505050565b610531610d9e565b610541856080015161010061084f565b508385600001818152505082856020019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508185604001907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191690817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681525050849050949350505050565b6105e682600383516108b9565b6105f98183610a3e90919063ffffffff16565b505050565b7fffffffffffffffffffffffffffffffffffffffffffffffff0000000000000000811215610635576106308282610a60565b6106a7565b67ffffffffffffffff8113156106545761064f8282610ad7565b6106a6565b6000811261066d57610668826000836108b9565b6106a5565b6106a4826001837fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff61069f91906111f6565b6108b9565b5b5b5b5050565b600030846040516020016106c0929190611343565b604051602081830303815290604052805190602001209050846005600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550807fb5e6e01e79f91267dc17b4e6314d5d4d03593d2ceee0fbb452b750bd70ea5af960405160405180910390a2600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634000aea08685856040518463ffffffff1660e01b81526004016107b69392919061136f565b602060405180830381600087803b1580156107d057600080fd5b505af11580156107e4573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061080891906113e5565b610847576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161083e90611484565b60405180910390fd5b949350505050565b610857610e0b565b600060208361086691906114d3565b146108925760208261087891906114d3565b60206108849190611504565b8261088f9190610ffc565b91505b81836020018181525050604051808452600081528281016020016040525082905092915050565b60178167ffffffffffffffff16116108f0576108ea8160058460ff16901b60ff161784610b2390919063ffffffff16565b50610a39565b60ff8167ffffffffffffffff16116109465761091f601860058460ff16901b1784610b2390919063ffffffff16565b506109408167ffffffffffffffff16600185610b439092919063ffffffff16565b50610a38565b61ffff8167ffffffffffffffff161161099d57610976601960058460ff16901b1784610b2390919063ffffffff16565b506109978167ffffffffffffffff16600285610b439092919063ffffffff16565b50610a37565b63ffffffff8167ffffffffffffffff16116109f6576109cf601a60058460ff16901b1784610b2390919063ffffffff16565b506109f08167ffffffffffffffff16600485610b439092919063ffffffff16565b50610a36565b610a13601b60058460ff16901b1784610b2390919063ffffffff16565b50610a348167ffffffffffffffff16600885610b439092919063ffffffff16565b505b5b5b5b505050565b610a46610e0b565b610a5883846000015151848551610b65565b905092915050565b610a7e60036005600660ff16901b1783610b2390919063ffffffff16565b50610ad382827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff610aaf91906111f6565b604051602001610abf9190610f0f565b604051602081830303815290604052610c54565b5050565b610af560026005600660ff16901b1783610b2390919063ffffffff16565b50610b1f8282604051602001610b0b9190610f0f565b604051602081830303815290604052610c54565b5050565b610b2b610e0b565b610b3b8384600001515184610c79565b905092915050565b610b4b610e0b565b610b5c848560000151518585610cd0565b90509392505050565b610b6d610e0b565b8251821115610b7b57600080fd5b84602001518285610b8c9190610ffc565b1115610bc157610bc0856002610bb188602001518887610bac9190610ffc565b610d5e565b610bbb9190611538565b610d7a565b5b600080865180518760208301019350808887011115610be05787860182525b60208701925050505b60208410610c275780518252602082610c029190610ffc565b9150602081610c119190610ffc565b9050602084610c209190611504565b9350610be9565b60006001856020036101000a03905080198251168184511681811785525050508692505050949350505050565b610c6182600283516108b9565b610c748183610a3e90919063ffffffff16565b505050565b610c81610e0b565b83602001518310610ca757610ca68460028660200151610ca19190611538565b610d7a565b5b8351805160208583010184815381861415610cc3576001820183525b5050508390509392505050565b610cd8610e0b565b84602001518483610ce99190610ffc565b1115610d1157610d108560028685610d019190610ffc565b610d0b9190611538565b610d7a565b5b6000600183610100610d2391906116c5565b610d2d9190611504565b90508551838682010185831982511617815281518588011115610d505784870182525b505085915050949350505050565b600081831115610d7057829050610d74565b8190505b92915050565b600082600001519050610d8d838361084f565b50610d988382610a3e565b50505050565b6040518060a0016040528060008019168152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200160008152602001610e05610e0b565b81525090565b604051806040016040528060608152602001600081525090565b600080fd5b6000819050919050565b610e3d81610e2a565b8114610e4857600080fd5b50565b600081359050610e5a81610e34565b92915050565b6000819050919050565b610e7381610e60565b8114610e7e57600080fd5b50565b600081359050610e9081610e6a565b92915050565b60008060408385031215610ead57610eac610e25565b5b6000610ebb85828601610e4b565b9250506020610ecc85828601610e81565b9150509250929050565b610edf81610e2a565b82525050565b6000602082019050610efa6000830184610ed6565b92915050565b610f0981610e60565b82525050565b6000602082019050610f246000830184610f00565b92915050565b600082825260208201905092915050565b7f536f75726365206d75737420626520746865206f7261636c65206f662074686560008201527f2072657175657374000000000000000000000000000000000000000000000000602082015250565b6000610f97602883610f2a565b9150610fa282610f3b565b604082019050919050565b60006020820190508181036000830152610fc681610f8a565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061100782610e60565b915061101283610e60565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561104757611046610fcd565b5b828201905092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061107d82611052565b9050919050565b61108d81611072565b82525050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6110c881611093565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b838110156111085780820151818401526020810190506110ed565b83811115611117576000848401525b50505050565b6000601f19601f8301169050919050565b6000611139826110ce565b61114381856110d9565b93506111538185602086016110ea565b61115c8161111d565b840191505092915050565b60006101008201905061117d600083018b611084565b61118a602083018a610f00565b6111976040830189610ed6565b6111a46060830188611084565b6111b160808301876110bf565b6111be60a0830186610f00565b6111cb60c0830185610f00565b81810360e08301526111dd818461112e565b90509998505050505050505050565b6000819050919050565b6000611201826111ec565b915061120c836111ec565b9250827f80000000000000000000000000000000000000000000000000000000000000000182126000841215161561124757611246610fcd565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01821360008412161561127f5761127e610fcd565b5b828203905092915050565b6000819050919050565b60006112af6112aa6112a584611052565b61128a565b611052565b9050919050565b60006112c182611294565b9050919050565b60006112d3826112b6565b9050919050565b60008160601b9050919050565b60006112f2826112da565b9050919050565b6000611304826112e7565b9050919050565b61131c611317826112c8565b6112f9565b82525050565b6000819050919050565b61133d61133882610e60565b611322565b82525050565b600061134f828561130b565b60148201915061135f828461132c565b6020820191508190509392505050565b60006060820190506113846000830186611084565b6113916020830185610f00565b81810360408301526113a3818461112e565b9050949350505050565b60008115159050919050565b6113c2816113ad565b81146113cd57600080fd5b50565b6000815190506113df816113b9565b92915050565b6000602082840312156113fb576113fa610e25565b5b6000611409848285016113d0565b91505092915050565b7f756e61626c6520746f207472616e73666572416e6443616c6c20746f206f726160008201527f636c650000000000000000000000000000000000000000000000000000000000602082015250565b600061146e602383610f2a565b915061147982611412565b604082019050919050565b6000602082019050818103600083015261149d81611461565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006114de82610e60565b91506114e983610e60565b9250826114f9576114f86114a4565b5b828206905092915050565b600061150f82610e60565b915061151a83610e60565b92508282101561152d5761152c610fcd565b5b828203905092915050565b600061154382610e60565b915061154e83610e60565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561158757611586610fcd565b5b828202905092915050565b60008160011c9050919050565b6000808291508390505b60018511156115e9578086048111156115c5576115c4610fcd565b5b60018516156115d45780820291505b80810290506115e285611592565b94506115a9565b94509492505050565b60008261160257600190506116be565b8161161057600090506116be565b816001811461162657600281146116305761165f565b60019150506116be565b60ff84111561164257611641610fcd565b5b8360020a91508482111561165957611658610fcd565b5b506116be565b5060208310610133831016604e8410600b84101617156116945782820a90508381111561168f5761168e610fcd565b5b6116be565b6116a1848484600161159f565b925090508184048111156116b8576116b7610fcd565b5b81810290505b9392505050565b60006116d082610e60565b91506116db83610e60565b92506117087fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff84846115f2565b90509291505056fe68747470733a2f2f6d696e2d6170692e63727970746f636f6d706172652e636f6d2f646174612f70726963656d756c746966756c6c3f6673796d733d455448267473796d733d555344a2646970667358221220c6ad41d5ffb925b174a2c1dd1f4edcdef162ed55e5398b56c2c033c25e389b0564736f6c63430008090033";

type APIConsumerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: APIConsumerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class APIConsumer__factory extends ContractFactory {
  constructor(...args: APIConsumerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _oracle: PromiseOrValue<string>,
    _jobId: PromiseOrValue<BytesLike>,
    _fee: PromiseOrValue<BigNumberish>,
    _link: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<APIConsumer> {
    return super.deploy(
      _oracle,
      _jobId,
      _fee,
      _link,
      overrides || {}
    ) as Promise<APIConsumer>;
  }
  override getDeployTransaction(
    _oracle: PromiseOrValue<string>,
    _jobId: PromiseOrValue<BytesLike>,
    _fee: PromiseOrValue<BigNumberish>,
    _link: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _oracle,
      _jobId,
      _fee,
      _link,
      overrides || {}
    );
  }
  override attach(address: string): APIConsumer {
    return super.attach(address) as APIConsumer;
  }
  override connect(signer: Signer): APIConsumer__factory {
    return super.connect(signer) as APIConsumer__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): APIConsumerInterface {
    return new utils.Interface(_abi) as APIConsumerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): APIConsumer {
    return new Contract(address, _abi, signerOrProvider) as APIConsumer;
  }
}
